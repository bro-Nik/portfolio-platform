services:
  auth-db:
    image: postgres:18
    container_name: auth-db
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - portfolios-net
    volumes:
      - auth_db_data:/var/lib/postgresql/data

  admin-db:
    image: mariadb
    container_name: admin-db
    environment:
      - MYSQL_ROOT_PASSWORD=${ADMIN_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${ADMIN_DB_NAME}
      - MYSQL_USER=${ADMIN_DB_USER}
      - MYSQL_PASSWORD=${ADMIN_DB_PASSWORD}
    volumes:
      - admin_db_data:/var/lib/mysql
      # - ./databases/dumps/admin/:/docker-entrypoint-initdb.d/
    networks:
      - portfolios-net
    restart: unless-stopped
    ports:
      - "3306:3306"  # Для отладки

  auth:
    build: ./auth
    container_name: auth
    environment:
      DB_NAME: ${AUTH_DB_NAME}
      DB_USER: ${AUTH_DB_USER}
      DB_PASSWORD: ${AUTH_DB_PASSWORD}
      DB_HOST: ${AUTH_DB_HOST}
      DB_PORT: ${AUTH_DB_PORT}
      JWT_SECRET: ${AUTH_SECRET_KEY}
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
    depends_on:
      - auth-db
    volumes:
      - ./auth/app:/app/app
    networks:
      - portfolios-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - RELOAD=true
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    depends_on:
      - admin-db
    networks:
      - portfolios-net
    restart: unless-stopped
    volumes:
      - ./backend/app:/app/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - FAST_REFRESH=true
      - REACT_APP_AUTH_SERVICE_URL=/auth
    depends_on:
      - backend
      - auth
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    ports:
      - "3000:3000"
    networks:
      - portfolios-net
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
    networks:
      - portfolios-net

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    depends_on:
      - admin-db
    networks:
      - portfolios-net

networks:
  portfolios-net:
    driver: bridge

volumes:
  admin_db_data:
  auth_db_data:
